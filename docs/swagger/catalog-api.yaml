openapi: 3.0.3
info:
  title: Novatrade Catálogo API
  description: API para la gestión del catálogo de productos de Novatrade
  version: 1.0.0
  contact:
    name: Equipo Novatrade
servers:
  - url: http://localhost:8080
    description: Servidor local
tags:
  - name: productos
    description: Operaciones con productos del catálogo

paths:
  /api/v1/products:
    get:
      tags:
        - productos
      summary: Listar todos los productos
      description: Obtiene una lista de todos los productos en el catálogo
      operationId: listProducts
      responses:
        '200':
          description: Lista de productos obtenida correctamente
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProductsResponse'
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

    post:
      tags:
        - productos
      summary: Crear un nuevo producto
      description: Crea un nuevo producto en el catálogo
      operationId: createProduct
      requestBody:
        description: Información del producto a crear
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ProductRequest'
      responses:
        '201':
          description: Producto creado correctamente
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Datos de producto inválidos
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /api/v1/products/{id}:
    get:
      tags:
        - productos
      summary: Obtener un producto por ID
      description: Obtiene un producto específico según su ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: ID del producto
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Producto encontrado
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ProductResponse'
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado
        '500':
          description: Error interno del servidor

components:
  schemas:
    ProductRequest:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - attributes
          properties:
            type:
              type: string
              example: products
            attributes:
              type: object
              required:
                - name
                - price
              properties:
                name:
                  type: string
                  example: "iPhone 13"
                price:
                  type: number
                  format: double
                  example: 799.99
                description:
                  type: string
                  example: "Smartphone de última generación"

    ProductResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            type:
              type: string
              example: products
            id:
              type: string
              example: "123"
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: "iPhone 13"
                price:
                  type: number
                  format: double
                  example: 799.99
                description:
                  type: string
                  example: "Smartphone de última generación"

    ProductsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                example: products
              id:
                type: string
                example: "123"
              attributes:
                type: object
                properties:
                  name:
                    type: string
                    example: "iPhone 13"
                  price:
                    type: number
                    format: double
                    example: 799.99
                  description:
                    type: string
                    example: "Smartphone de última generación"
