plugins {
    id "org.springframework.boot" version "3.3.2" apply false
    id "io.spring.dependency-management" version "1.1.5" apply false
    id "java-library"
    id "jacoco"
}

allprojects {
    group = "com.novatrade.inventory"
    version = "1.0.0"
    repositories { mavenCentral() }
}

subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: "io.spring.dependency-management"

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    sourceCompatibility = "17"
    targetCompatibility = "17"
    tasks.withType(JavaCompile).configureEach { options.encoding = "UTF-8" }

    // Configuraci칩n de JaCoCo para subproyectos
    jacoco {
        toolVersion = "0.8.11"
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
    }
}

project(":model") {
    apply plugin: "java-library"
    dependencies {
        compileOnly "org.projectlombok:lombok:1.18.32"
        annotationProcessor "org.projectlombok:lombok:1.18.32"
        testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
    }
    test { useJUnitPlatform() }
}

project(":usecase") {
    apply plugin: "java-library"
    dependencies {
        api project(":model")
        compileOnly "org.projectlombok:lombok:1.18.32"
        annotationProcessor "org.projectlombok:lombok:1.18.32"
        testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
        testImplementation "org.mockito:mockito-core:5.12.0"
        testImplementation "org.mockito:mockito-junit-jupiter:5.12.0"
    }
    test { useJUnitPlatform() }
}

project(":infrastructure:driven-adapters:sqlserver-jpa") {
    apply plugin: "io.spring.dependency-management"
    apply plugin: "java-library"
    dependencies {
        api project(":model")
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        implementation "org.springframework.boot:spring-boot-starter-web"
        runtimeOnly "com.microsoft.sqlserver:mssql-jdbc:12.4.1.jre11"
        implementation "org.springframework.boot:spring-boot-starter-validation"
        implementation "net.logstash.logback:logstash-logback-encoder:7.4"
        compileOnly "org.projectlombok:lombok:1.18.32"
        annotationProcessor "org.projectlombok:lombok:1.18.32"
        // Resilience4j
        implementation "io.github.resilience4j:resilience4j-spring-boot3:2.2.0"
        implementation "io.github.resilience4j:resilience4j-retry:2.2.0"
        implementation "io.github.resilience4j:resilience4j-circuitbreaker:2.2.0"
        implementation "io.github.resilience4j:resilience4j-annotations:2.2.0"
        testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
    test { useJUnitPlatform() }
}

project(":infrastructure:entry-points:rest-web") {
    apply plugin: "io.spring.dependency-management"
    dependencies {
        implementation project(":usecase")
        implementation project(":model")
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-validation"
        implementation "org.springframework.boot:spring-boot-starter-actuator"
        implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0"

        // A침adiendo dependencias para pruebas unitarias
        testImplementation "org.junit.jupiter:junit-jupiter:5.10.2"
        testImplementation "org.mockito:mockito-core:5.12.0"
        testImplementation "org.mockito:mockito-junit-jupiter:5.12.0"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }

    test { useJUnitPlatform() }
}

project(":applications:app-service") {
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    dependencies {
        implementation project(":infrastructure:entry-points:rest-web")
        implementation project(":infrastructure:driven-adapters:sqlserver-jpa")
        implementation project(":usecase")
        implementation project(":model")
        implementation "org.flywaydb:flyway-core:10.15.0"
        developmentOnly "org.springframework.boot:spring-boot-devtools"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
    tasks.named("test") { useJUnitPlatform() }
}

// Configuraci칩n de JaCoCo para informes de cobertura
jacoco {
    toolVersion = "0.8.11"
}

// Tarea para fusionar los resultados de cobertura de todos los subproyectos
task jacocoMergeReport(type: JacocoReport) {
    description = 'Genera un informe de cobertura agregado de todos los subproyectos'

    // Ejecutar tests antes de generar el informe
    dependsOn = subprojects.test

    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Agregar todos los directorios de c칩digo fuente de los subproyectos
    subprojects.each { subproject ->
        if (subproject.plugins.hasPlugin('jacoco')) {
            sourceSets subproject.sourceSets.main
        }
    }

    reports {
        xml.required = true
        html.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/test/html')
    }
}
